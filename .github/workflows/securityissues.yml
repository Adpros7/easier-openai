name: Daily Security Alert Check

on:
  schedule:
    - cron: '0 1 * * *'     # runs daily at 01:00 UTC (adjust as you like)
  workflow_dispatch:
    inputs:
      manual_details:
        description: "Optional details or JSON payload for manual run"
        required: false
        default: "Triggered manually."

permissions:
  issues: write
  contents: read
  security-events: read

env:
  REPO: ${{ github.repository }}
  OWNER: ${{ github.repository_owner }}

jobs:
  check_alerts:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI & jq
        run: |
          sudo apt update
          sudo apt install -y gh jq

      - name: Login GH CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: Determine source & fetch alerts
        id: fetch
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            EVENT_NAME="manual"
            ISSUE_TITLE="ðŸ”’ Manual Security Alert Trigger"
            echo "${{ github.event.inputs.manual_details }}" > issue_body.json
          else
            EVENT_NAME="scheduled"
            ISSUE_TITLE="ðŸ”’ Daily Security Alert Summary for ${REPO}"
            # Dependabot alerts
            gh api -H "Accept: application/vnd.github+json" \
              /repos/${OWNER}/${{ github.event.repository.name }}/dependabot/alerts?state=open \
              > dependabot_alerts.json || echo "[]" > dependabot_alerts.json
            # Code scanning alerts
            gh api -H "Accept: application/vnd.github+json" \
              /repos/${OWNER}/${{ github.event.repository.name }}/code-scanning/alerts?state=open \
              > codescan_alerts.json || echo "[]" > codescan_alerts.json
            # Secret scanning alerts
            gh api -H "Accept: application/vnd.github+json" \
              /repos/${OWNER}/${{ github.event.repository.name }}/secret-scanning/alerts?state=open \
              > secretscan_alerts.json || echo "[]" > secretscan_alerts.json

            echo "{ \"dependabot\": $(jq length < dependabot_alerts.json), \"codescan\": $(jq length < codescan_alerts.json), \"secretscan\": $(jq length < secretscan_alerts.json) }" \
              > issue_body.json
          fi

          echo "EVENT_NAME=${EVENT_NAME}" >> $GITHUB_ENV
          echo "ISSUE_TITLE=${ISSUE_TITLE}" >> $GITHUB_ENV

      - name: Create GitHub Issue
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
          EVENT_NAME: ${{ env.EVENT_NAME }}
          ISSUE_TITLE: ${{ env.ISSUE_TITLE }}
        run: |
          # Prepare a proper JSON payload for creating an issue
          cat > payload.json <<EOF
{
  "title": "${ISSUE_TITLE}",
  "body": "**Security Event:** ${EVENT_NAME}\n\n\`\`\`json\n$(jq . < issue_body.json)\n\`\`\`\n\n_This issue was auto-created by a GitHub Actions workflow on ${REPO}._"
}
EOF

          gh api --method POST repos/${REPO}/issues --input payload.json
